name: Check for CI Target

on:
  pull_request:
  issues:
    types: [closed]

jobs:
  java:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: get the current number of java pcojects
        working-directory: ./application
        run: echo ::set-env name=SOURCE_PROJECT::$(find . -name "pom.xml" | grep -v -e target -e src | wc -l | tr -d ' ')
      - name: get java-ci.yml
        working-directory: ./.github/workflows
        run: echo ::set-env name=JAVACI_PROJECT::$(grep mvn java-ci.yml | wc -l | tr -d ' ')
      - name: check java-ci.yml
        run: |
          echo CURRENT: ${SOURCE_PROJECT}
          echo TARGET: ${JAVACI_PROJECT}
          test ${SOURCE_PROJECT} = ${JAVACI_PROJECT}
      - name: get .travis.yml
        run: echo ::set-env name=TRAVISCI_PROJECT::$(grep pom.xml .travis.yml | wc -l | tr -d ' ')
      - name: check java-ci.yml
        run: |
          echo CURRENT: ${SOURCE_PROJECT}
          echo TARGET: ${TRAVISCI_PROJECT}
          test ${SOURCE_PROJECT} = ${TRAVISCI_PROJECT}
      - name: create issue if failure
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/ISSUE_TEMPLATE/check-for-update-failure.md
        id: create-issue-java
      - name: create comment
        if: failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ steps.create-issue-java.outputs.number }}
          body: |
            Please see failure log: https://github.com/yurake/k8s-3tier-webapp/actions/runs/${{ github.run_id }}
      - name: create comment
        if: failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Please see new issue ${{ steps.create-issue-java.outputs.url }}

  minikube:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: check current quarkus version
        working-directory: ./.github/workflows
        run: echo ::set-env name=SOURCE_VERSION::$(grep "minikube:" minikube-ci.yml | awk '{print $3}' | tr -d ])
      - name: check latest tag quarkus version
        run: echo ::set-env name=TARGET_VERSION::$( curl -s https://api.github.com/repos/kubernetes/minikube/releases/latest | jq '.tag_name' | tr -d '"')
      - name: check diff
        run: |
          echo CURRENT: ${SOURCE_VERSION}
          echo TARGET: ${TARGET_VERSION}
          test ${SOURCE_VERSION} = ${TARGET_VERSION}
      - name: create issue if failure
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/ISSUE_TEMPLATE/check-for-update-failure.md
        id: create-issue-minikube
      - name: create comment
        if: failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ steps.create-issue-minikube.outputs.number }}
          body: |
            Please see failure log: https://github.com/yurake/k8s-3tier-webapp/actions/runs/${{ github.run_id }}
      - name: create comment
        if: failure()
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Please see new issue ${{ steps.create-issue-minikube.outputs.url }}
