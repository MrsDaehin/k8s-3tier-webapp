name: Java CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        svc: [hazelcast, memcached, rabbitmq, redis]
        svc-native: [activemq, mongodb, mysql, postgres]

    steps:
    - name: Check out Git repository
      uses: actions/checkout@v2
      
    - name: Setup GraalVM
      uses: DeLaGuardo/setup-graalvm@3
      with:
        graalvm-version: '20.0.0.java8'
    - run: java -version
    - name: setup-native-image
      run: |
        gu install native-image
    
    - name: docker login
      env:
        DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
        DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
      run: docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASS
      
    - name: Maven Build - webapp-service
      working-directory: ./application/webapp-service
      run: mvn -B package
      
    - name: Deploy to Github Package Registry - webapp-service
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "<settings><servers><server><id>github</id><username>OWNER</username><password>${GITHUB_TOKEN}</password></server></servers></settings>" > settings.xml
        mvn deploy --settings settings.xml --file application/webapp-service/pom.xml

    - name: Maven Build - jaxrs-${{ matrix.svc }}-quarkus
      working-directory: ./application/jaxrs-${{ matrix.svc }}-quarkus
      run: mvn -B package -Pnative
    - name: Pull Image - jaxrs-${{ matrix.svc }}-quarkus
      run: docker pull yurak/jaxrs-${{ matrix.svc }}-quarkus:latest
    - name: Build Image - jaxrs-${{ matrix.svc }}-quarkus
      working-directory: ./application/jaxrs-${{ matrix.svc }}-quarkus
      run: docker build -t yurak/jaxrs-${{ matrix.svc }}-quarkus:latest -f src/main/docker/Dockerfile.native .
    - name: Push Image - jaxrs-${{ matrix.svc }}-quarkus
      run: docker push yurak/jaxrs-${{ matrix.svc }}-quarkus:latest

    - name: Maven Build - jaxrs-${{ matrix.svc-native }}-quarkus
      working-directory: ./application/jaxrs-${{ matrix.svc-native }}-quarkus
      run: mvn -B package -Pnative
    - name: Pull Image - jaxrs-${{ matrix.svc-native }}-quarkus
      run: docker pull yurak/jaxrs-${{ matrix.svc-native }}-quarkus:latest
    - name: Build Image - jaxrs-${{ matrix.svc-native }}-quarkus
      working-directory: ./application/jaxrs-${{ matrix.svc-native }}-quarkus
      run: docker build -t yurak/jaxrs-${{ matrix.svc-native }}-quarkus:latest -f src/main/docker/Dockerfile.native .
    - name: Push Image - jaxrs-${{ matrix.svc-native }}-quarkus
      run: docker push yurak/jaxrs-${{ matrix.svc-native }}-quarkus:latest
      
    - name: Maven Build - activemq-mysql-quarkus
      working-directory: ./application/activemq-mysql-quarkus
      run: mvn -B package -Pnative
    - name: Pull Image - activemq-mysql-quarkus
      run: docker pull yurak/activemq-mysql-quarkus:latest
    - name: Build Image - activemq-mysql-quarkus
      working-directory: ./application/activemq-mysql-quarkus
      run: docker build -t yurak/activemq-mysql-quarkus:latest -f src/main/docker/Dockerfile.native .
    - name: Push Image - activemq-mysql-quarkus
      run: docker push yurak/activemq-mysql-quarkus:latest
      
    - name: Maven Build - hazelcast-mysql-quarkus
      working-directory: ./application/hazelcast-mysql-quarkus
      run: mvn -B package
    - name: Pull Image - hazelcast-mysql-quarkus
      run: docker pull yurak/hazelcast-mysql-quarkus:latest
    - name: Build Image - hazelcast-mysql-quarkus
      working-directory: ./application/hazelcast-mysql-quarkus
      run: docker build -t yurak/hazelcast-mysql-quarkus:latest -f src/main/docker/Dockerfile.jvm .
    - name: Push Image - hazelcast-mysql-quarkus
      run: docker push yurak/hazelcast-mysql-quarkus:latest
      
    - name: Maven Build - rabbitmq-mysql-quarkus
      working-directory: ./application/rabbitmq-mysql-quarkus
      run: mvn -B package
    - name: Pull Image - rabbitmq-mysql-quarkus
      run: docker pull yurak/rabbitmq-mysql-quarkus:latest
    - name: Build Image - rabbitmq-mysql-quarkus
      working-directory: ./application/rabbitmq-mysql-quarkus
      run: docker build -t yurak/rabbitmq-mysql-quarkus:latest -f src/main/docker/Dockerfile.jvm .
    - name: Push Image - rabbitmq-mysql-quarkus
      run: docker push yurak/rabbitmq-mysql-quarkus:latest
      
    - name: Maven Build - randompublish-quarkus
      working-directory: ./application/randompublish-quarkus
      run: mvn -B package -Pnative
    - name: Pull Image - randompublish-quarkus
      run: docker pull yurak/randompublish-quarkus:latest
    - name: Build Image - randompublish-quarkus
      working-directory: ./application/randompublish-quarkus
      run: docker build -t yurak/randompublish-quarkus:latest -f src/main/docker/Dockerfile.native .
    - name: Push Image - randompublish-quarkus
      run: docker push yurak/randompublish-quarkus:latest
      
    - name: Maven Build - redis-mysql-helidon
      working-directory: ./application/redis-mysql-helidon
      run: mvn -B package
      
    - name: Maven Build - redis-mysql-quarkus
      working-directory: ./application/redis-mysql-quarkus
      run: mvn -B package
    - name: Pull Image - redis-mysql-quarkus
      run: docker pull yurak/redis-mysql-quarkus:latest
    - name: Build Image - redis-mysql-quarkus
      working-directory: ./application/redis-mysql-quarkus
      run: docker build -t yurak/redis-mysql-quarkus:latest -f src/main/docker/Dockerfile.jvm .
    - name: Push Image - redis-mysql-quarkus
      run: docker push yurak/redis-mysql-quarkus:latest
      
    - name: Maven Build - scheduled-quarkus
      working-directory: ./application/scheduled-quarkus
      run: mvn -B package -Pnative
    - name: Pull Image - scheduled-quarkus
      run: docker pull yurak/scheduled-quarkus:latest
    - name: Build Image - scheduled-quarkus
      working-directory: ./application/scheduled-quarkus
      run: docker build -t yurak/scheduled-quarkus:latest -f src/main/docker/Dockerfile.native .
    - name: Push Image - scheduled-quarkus
      run: docker push yurak/scheduled-quarkus:latest
      
    - name: Maven Build - redis-mysql-quarkus
      working-directory: ./application/redis-mysql-quarkus
      run: mvn -B package
    - name: Pull Image - redis-mysql-quarkus
      run: docker pull yurak/redis-mysql-quarkus:latest
    - name: Build Image - redis-mysql-quarkus
      working-directory: ./application/redis-mysql-quarkus
      run: docker build -t yurak/redis-mysql-quarkus:latest -f src/main/docker/Dockerfile.jvm .
    - name: Push Image - redis-mysql-quarkus
      run: docker push yurak/redis-mysql-quarkus:latest


    - name: Maven Build - wlp
      working-directory: ./application/wlp-web-java-spring
      run: mvn -B package
    - name: Copy war file
      uses: canastro/copy-file-action@master
      with:
        source: "application/wlp-web-java-spring/target/spring.war"
        target: "kubernetes/wlp/spring.war"
    - name: Pull Image - wlp
      run: docker pull yurak/wlp:latest
    - name: Build image - wlp
      working-directory: ./kubernetes/wlp
      run: docker build -t yurak/wlp:latest .
    - name: Push Image - wlp
      run: docker push yurak/wlp:latest

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
